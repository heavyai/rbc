name: Test RBC

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install flake8
        run: |
          pip install flake8
      
      - name: Lint:flake8
        run: |
          flake8 .

  build:
    name: ${{ matrix.os }} - Python v${{ matrix.python-version }} - Omniscidb v${{ matrix.omniscidb-version }}-${{ matrix.omniscidb-from }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8]
        omniscidb-version: [5.2.2, 5.4.1, 5.5.0]
        omniscidb-from: [conda]
        include:
          - os: windows-latest
            python-version: 3.7
            omniscidb-version: None
            omniscidb-from: None
          - os: windows-latest
            python-version: 3.8
            omniscidb-version: None
            omniscidb-from: None
          - os: macos-latest
            python-version: 3.7
            omniscidb-version: None
            omniscidb-from: None
          - os: macos-latest
            python-version: 3.8
            omniscidb-version: None
            omniscidb-from: None
          - os: ubuntu-latest
            python-version: 3.8
            omniscidb-version: 5.5.1
            omniscidb-from: docker
          - os: windows-latest
            python-version: 3.8
            omniscidb-version: 5.5.1
            omniscidb-from: docker

          
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
        
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.8
          mamba-version: "*"
          channels: conda-forge
          environment-file: .conda/environment.yml

      # omniscidb must be run in an environment that is independent of rbc environment
      - name: Install omniscidb v${{ matrix.omniscidb-version }} [conda]
        shell: bash -l {0}
        if: matrix.os == 'ubuntu-latest' && matrix.omniscidb-from == 'conda'
        run: |
          mamba create -n omniscidb-env omniscidb=${{ matrix.omniscidb-version }}=*_cpu -c conda-forge
      
      # omniscidb docker
      - name: Build the docker image [docker]
        shell: bash -l {0}
        if: matrix.os == 'ubuntu-latest' && matrix.omniscidb-from == 'docker'
        run: |
          # force docker-compose installation
          mamba create -n docker docker-compose -c conda-forge
          # run docker services
          mamba run -n docker docker-compose build
          mamba run -n docker docker-compose up -d
          sleep 20

      - name: omniscidb-env conda list [conda]
        shell: bash -l {0}
        if: matrix.os == 'ubuntu-latest' && matrix.omniscidb-from == 'conda'
        run: |
          mamba run -n omniscidb-env conda list

      - name: Start Omniscidb [conda]
        shell: bash -l {0}
        if: matrix.os == 'ubuntu-latest' && matrix.omniscidb-from == 'conda'
        run: |
          mkdir data
          mamba run -n omniscidb-env omnisci_initdb data -f
          mamba run -n omniscidb-env omnisci_server --version
          mamba run -n omniscidb-env omnisci_server --enable-runtime-udf --enable-table-functions 2>&1 > omniscidb-output.txt &
          sleep 10

      - name: rbc conda config
        shell: bash -l {0}
        run: mamba run -n rbc conda config --show  

      - name: rbc conda list
        shell: bash -l {0}
        run: |
          mamba run -n rbc conda list

      - name: Develop rbc
        shell: bash -l {0}
        run: |
          mamba run -n rbc python setup.py develop

      - name: Run rbc tests
        shell: bash -l {0}
        run: |
          mamba run -n rbc pytest -sv -r A rbc/ -x
