name: Upload RBC to Pypi

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v\d+.\d+.\d+' # Push events to matching v*.*.*, i.e. v1.0.0, v20.15.10

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Build wheel
        run: |
          python -m pip install wheel
          python setup.py bdist_wheel --universal

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verify_metadata: true
          verbose: true
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # repository_url: https://test.pypi.org/legacy/

  build_changelog:
    needs: [upload_pypi]
    name: Build ChangeLog
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: "Build Changelog"
        id: github_release
        uses: mikepenz/release-changelog-builder-action@main
        with:
          configuration: "changelog_config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog}}
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
