name: Upload RBC to Pypi

# on:
#   push:
#     # Sequence of patterns matched against refs/tags
#     tags:
#       - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  pull_request:
    branches:
      - master

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
      - name: Install buildwheels
        uses: pypa/cibuildwheel@v2.3.1
        env:  # minimum version is cpython 3.7
          CIBW_BUILD: "cp37-*64 cp38-*64 cp39-* cp310-*"
          CIBW_BEFORE_BUILD: python -m pip install cffi

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  # build_sdist:
  #   name: Build source distribution
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Build sdist
  #       run: python setup.py sdist

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: dist/*.tar.gz

  # upload_pypi:
  #   needs: [build_sdist, build_wheels]
  #   runs-on: ubuntu-latest
  #   # upload to PyPI on every tag starting with 'v'
  #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
  #   # alternatively, to publish when a GitHub Release is created, use the following rule:
  #   # if: github.event_name == 'release' && github.event.action == 'published'
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         verify_metadata: true
  #         verbose: true
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}
  #         # repository_url: https://test.pypi.org/legacy/
